
#Область ПрограммныйИнтерфейс

// Устанавливает признак записи всем наборам движений переданной коллекции
//
// Параметры:
//  ДокументОбъект - ДокументОбъект -
Процедура УстановитьПризнакЗаписыватьДляВсехНаборовДвижений(ДокументОбъект) Экспорт
	Для Каждого НаборДвижений Из ДокументОбъект.Движения Цикл
		НаборДвижений.Записывать = Истина;
	КонецЦикла;
КонецПроцедуры

// Возвращает ссылку на документ-регистратор, по которому установлен отбор в наборе записей
//
// Параметры:
//  НаборЗаписей - РегистрСведенийНаборЗаписей, РегистрНакопленияНаборЗаписей -
//  ВызватьИсключениеПриОтсутствии - Булево - Вызвать исключение, если у набора записей не установлен
//                                   отбор по полю "Регистратор"
// 
// Возвращаемое значение:
//  ДокументСсылка, Неопределено -
Функция РегистраторИзОтбораНабораЗаписей(НаборЗаписей, ВызватьИсключениеПриОтсутствии = Истина) Экспорт
	ЭлементОтбора = НаборЗаписей.Отбор.Найти("Регистратор");
	Если ЭлементОтбора <> Неопределено Тогда
		Возврат ЭлементОтбора.Значение;
	ИначеЕсли ВызватьИсключениеПриОтсутствии Тогда
		ВызватьИсключение НСтр("ru='В наборе записей не установлен отбор по регистратору'");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Очищает набор записей и устанавливает его признак Записывать в значение Истина
// Процедура предназначена для вызова из процедур формирования движений менеджеров документов
//
// Параметры:
//  НаборЗаписей - РегистрСведенийНаборЗаписей, РегистрНакопленияНаборЗаписей -
//  Отказ - Булево, Неопределено - Если Истина, процедура ничего не делает
Процедура ПриНачалеФормированияДвижений(НаборЗаписей, Отказ) Экспорт
	Если Отказ <> Истина Тогда
		НаборЗаписей.Очистить();
		НаборЗаписей.Записывать = Истина;
	КонецЕсли;
КонецПроцедуры

// Если открыта форма создания нового объекта (не копированием), вызывается заполнение
// объекта методом ЗаполнитьНовыйОбъект() модуля менеджера объекта метаданных
//
// Процедура предназначена для вызова в форме объекта в обработчике события ПриСозданииНаСервере
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -
Процедура ЗаполнитьНовыйОбъектПриСозданииФормы(Форма) Экспорт
	Если ЗначениеЗаполнено(Форма.Объект.Ссылка)
		Или ЗначениеЗаполнено(Форма.Параметры.ЗначениеКопирования)
		Или ЗначениеЗаполнено(Форма.Параметры.Основание) Тогда
		
		Возврат;
	КонецЕсли;
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Форма.Объект.Ссылка);
	Менеджер.ЗаполнитьНовыйОбъект(Форма.Объект);
КонецПроцедуры

// Возвращает значение реквизита переданного объекта, либо ссылки
//
// Параметры:
//  ОбъектИлиСсылка - СправочникОбъект, ДокументОбъект, СправочникСсылка, ДокументСсылка -
//  ИмяРеквизита - Строка - Имя получаемого реквизита.
//                 При передаче объекта передача имени вложенного реквизита (напр., "Счет.Наименование") недопустимо
// 
// Возвращаемое значение:
//  Произвольный - Значение реквизита
Функция ЗначениеРеквизитаОбъектаИлиСсылки(ОбъектИлиСсылка, ИмяРеквизита) Экспорт
	Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ОбъектИлиСсылка))
			Или Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ОбъектИлиСсылка)) Тогда
		// Передана ссылка
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектИлиСсылка, ИмяРеквизита);
	Иначе
		// Передан объект
		Возврат ОбъектИлиСсылка[ИмяРеквизита];
	КонецЕсли;
КонецФункции

// Возвращает значения реквизитов переданного объекта, либо ссылки
//
// Параметры:
//  ОбъектИлиСсылка - СправочникОбъект, ДокументОбъект, СправочникСсылка, ДокументСсылка -
//  ИменаРеквизитов - Строка - Имена получаемых реквизита.
//                    При передаче объекта передача имени вложенных реквизитов (напр., "Счет.Наименование") недопустимо
// 
// Возвращаемое значение:
//  Структура - Ключ структуры: имя реквизита. Значение: значение реквизита
Функция ЗначенияРеквизитовОбъектаИлиСсылки(ОбъектИлиСсылка, ИменаРеквизитов) Экспорт
	Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ОбъектИлиСсылка))
			Или Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ОбъектИлиСсылка)) Тогда
		// Передана ссылка
		Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектИлиСсылка, ИменаРеквизитов);
	Иначе
		// Передан объект
		Результат = Новый Структура(ИменаРеквизитов);
		ЗаполнитьЗначенияСвойств(Результат, ОбъектИлиСсылка);
		Возврат Результат;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик подписки на событие
//
Процедура ОтменитьПроведениеДокументаИзБудущего(ДокументОбъект, Отказ, РежимПроведения = Неопределено) Экспорт
	Если ДокументОбъект.Дата > ТекущаяДатаСеанса() Тогда
		Текст = НСтр("ru='Документы этого типа недопустимо проводить с датой из будущего'");
		ОбщегоНазначения.СообщитьПользователю(Текст,, "Объект.Дата",, Отказ);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
