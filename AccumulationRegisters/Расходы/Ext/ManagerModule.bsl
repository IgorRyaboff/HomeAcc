
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Находит и регистрирует несоответствия между наличием (или признаком "Безразмерная") единицы измерения номенклатуры
// и заполненностью ресурса "Количество" записи регистра
//
// Параметры:
//   Проверка            - СправочникСсылка.ПравилаПроверкиУчета
//   ПараметрыПроверки   - см. КонтрольВеденияУчета.ОписаниеПроблемы.ПараметрыПроверки
Процедура ПроверитьНаличиеОтсутствиеКоличестваВЗаписях(Проверка, ПараметрыПроверки) Экспорт
	// BSLLS:LogicalOrInTheWhereSectionOfQuery-off
	// Условия "ИЛИ" не используются для индексированных полей запроса
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Расходы.Регистратор КАК Регистратор,
		|	Расходы.Регистратор.Ответственный КАК Ответственный
		|ИЗ
		|	РегистрНакопления.Расходы КАК Расходы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|			ПО СпрНоменклатура.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
		|		ПО Расходы.Номенклатура = СпрНоменклатура.Ссылка
		|ГДЕ
		|	(&ПроверяемыеОбъекты = НЕОПРЕДЕЛЕНО
		|			ИЛИ Расходы.Регистратор В (&ПроверяемыеОбъекты))
		|	И Расходы.Период >= &ДатаНачалаПроверки
		|	И (Расходы.Количество <> 0
		|				И (ЕдиницыИзмерения.Безразмерная ЕСТЬ NULL
		|					ИЛИ ЕдиницыИзмерения.Безразмерная)
		|			ИЛИ Расходы.Количество = 0
		|				И (НЕ ЕдиницыИзмерения.Безразмерная ЕСТЬ NULL
		|					И НЕ ЕдиницыИзмерения.Безразмерная))";
	// BSLLS:LogicalOrInTheWhereSectionOfQuery-on
	
	Запрос.УстановитьПараметр("ДатаНачалаПроверки", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПроверки,
		"ДатаНачалаПроверки", Дата(1, 1, 1)));
	Запрос.УстановитьПараметр("ПроверяемыеОбъекты", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПроверки,
		"ПроверяемыеОбъекты"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Проблема = КонтрольВеденияУчета.ОписаниеПроблемы(Выборка.Регистратор, ПараметрыПроверки);
		КонтрольВеденияУчета.ЗаписатьПроблему(Проблема, ПараметрыПроверки);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
