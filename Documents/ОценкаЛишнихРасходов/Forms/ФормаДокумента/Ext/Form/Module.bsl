
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбщегоНазначенияПятьДенег.ЗаполнитьНовыйОбъектПриСозданииФормы(ЭтотОбъект);
	
	УстановитьУсловноеОформление();
	УстановитьВидимостьПредупрежденияОПредварительномРасчете(ЭтотОбъект);
	
	// АПК:1416-выкл параметр ЗначенияЗаполнения может не иметь этого свойства
	Если Параметры.ЗначенияЗаполнения.Свойство("Месяц") Тогда
		ЗаполнитьЛишниеРасходыНаСервере();
	КонецЕсли;
	// АПК:1416-вкл
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	УстановитьВидимостьПредупрежденияОПредварительномРасчете(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	
	УстановитьВидимостьПредупрежденияОПредварительномРасчете(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЛишниеРасходыПриИзменении(Элемент)
	Объект.СуммаДокумента = ОценкаЛишнихРасходовКлиентСервер.СуммаДокумента(Объект.ЛишниеРасходы);
КонецПроцедуры

&НаКлиенте
Процедура МесяцПриИзменении(Элемент)
	Объект.ЛишниеРасходы.Очистить();
	Объект.ЭтоПредварительныйРасчет = Ложь;
	УстановитьВидимостьПредупрежденияОПредварительномРасчете(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура НадписьПредварительныйРасчетРасширеннаяПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "УбратьПризнак" Тогда
		СтандартнаяОбработка = Ложь;
		
		ЗаблокироватьДанныеФормыДляРедактирования();
		Объект.ЭтоПредварительныйРасчет = Ложь;
		Модифицированность = Истина;
		
		УстановитьВидимостьПредупрежденияОПредварительномРасчете(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// BSLLS:TransferringParametersBetweenClientAndServer-off
// Код БСП модифицировать не буду
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
// BSLLS:TransferringParametersBetweenClientAndServer-on

&НаКлиенте
Асинх Процедура ЗаполнитьЛишниеРасходы(Команда)
	Если Объект.ЛишниеРасходы.Количество() > 0 Тогда
		Ответ = Ждать ВопросАсинх(НСтр("ru='Табличная часть документа будет очищена. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьЛишниеРасходыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиЛишниеРасходы(Команда)
	ЗаполнитьЗначениеПометкиЛишниеРасходыАсинх(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометкиЛишниеРасходы(Команда)
	ЗаполнитьЗначениеПометкиЛишниеРасходыАсинх(Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Серый);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ЗачеркнутыйШрифтТекста);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементУО.Отбор, "Объект.ЛишниеРасходы.Пометка", Ложь
		, ВидСравненияКомпоновкиДанных.Равно,, Истина);
		
	ПолеУО = ЭлементУО.Поля.Элементы.Добавить();
	ПолеУО.Использование = Истина;
	ПолеУО.Поле = Новый ПолеКомпоновкиДанных("ЛишниеРасходы");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЛишниеРасходыНаСервере()
	Если Не ЗначениеЗаполнено(Объект.Месяц) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Не заполнен месяц'"),,, "Объект.Месяц");
		Возврат;
	КонецЕсли;
	
	ДанныеИБ = ДанныеОЛишнихРасходах(Объект.Месяц);
	Объект.ЛишниеРасходы.Загрузить(ДанныеИБ);
	Объект.ЭтоПредварительныйРасчет = (НачалоМесяца(ТекущаяДатаСеанса()) < Объект.Месяц);
	
	Объект.СуммаДокумента = ОценкаЛишнихРасходовКлиентСервер.СуммаДокумента(Объект.ЛишниеРасходы);
	
	УстановитьВидимостьПредупрежденияОПредварительномРасчете(ЭтотОбъект);
	Модифицированность = Истина;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеОЛишнихРасходах(Знач Месяц)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходыОбороты.КатегорияРасходов КАК КатегорияРасходов,
		|	РасходыОбороты.СтатьяРасходов КАК СтатьяРасходов,
		|	РасходыОбороты.Номенклатура КАК Номенклатура,
		|	РасходыОбороты.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрНакопления.Расходы.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			,
		|			НЕ КатегорияРасходов.НеИспользовать
		|				И КатегорияРасходов.ВключатьВОценкуЛишнихРасходов) КАК РасходыОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	КатегорияРасходов,
		|	СтатьяРасходов";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Месяц));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьПредупрежденияОПредварительномРасчете(Форма)
	Видимость = Форма.Объект.ЭтоПредварительныйРасчет;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "НадписьПредварительныйРасчет", "Видимость", Видимость);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗаполнитьЗначениеПометкиЛишниеРасходыАсинх(Значение)
	ВыделенныеСтроки = Элементы.ЛишниеРасходы.ВыделенныеСтроки;
	ОбработатьТолькоВыделенные = Ложь;
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	ИначеЕсли ВыделенныеСтроки.Количество() > 1 Тогда
		ТекстУстановкаПометки = НСтр("ru='Выделено несколько строк. На какие строки следует установить пометку?'");
		ТекстСнятиеПометки = НСтр("ru='Выделено несколько строк. С каких строк следует снять пометку?'");
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(Истина, НСтр("ru='Только выделенные'"));
		Кнопки.Добавить(Ложь, НСтр("ru='Вся табличная часть'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		Ответ = Ждать ВопросАсинх(?(Значение = Истина, ТекстУстановкаПометки, ТекстСнятиеПометки), Кнопки);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		Иначе
			ОбработатьТолькоВыделенные = Ответ;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого СтрЛишниеРасходы Из Объект.ЛишниеРасходы Цикл
		Если ОбработатьТолькоВыделенные И ВыделенныеСтроки.Найти(СтрЛишниеРасходы.ПолучитьИдентификатор()) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрЛишниеРасходы.Пометка = Значение;
	КонецЦикла;
	
	Объект.СуммаДокумента = ОценкаЛишнихРасходовКлиентСервер.СуммаДокумента(Объект.ЛишниеРасходы);
КонецПроцедуры

#КонецОбласти
