
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует объект значениями по умолчанию
//
// Параметры:
//  Объект - ДокументОбъект.Доход, ДанныеФормыСтруктура -
Процедура ЗаполнитьНовыйОбъект(Объект) Экспорт
	Объект.Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры

// Формирует наборы движений по регистрам для переданного документа
//
// Параметры:
//  Ссылка - ДокументСсылка.Долг -
//
// Возвращаемое значение:
//  Структура - Ключ структуры соответствует имени регистра.
//              Значение каждого свойства - ТаблицаЗначений с движениями по регистру
Функция ДанныеДляПроведенияДокумента(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Долг.Дата КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	Долг.Ссылка КАК Долг,
		|	Долг.СуммаДокумента КАК Сумма
		|ИЗ
		|	Документ.Долг КАК Долг
		|ГДЕ
		|	Долг.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Долг.Ссылка КАК Долг,
		|	Долг.ВидДолга КАК ВидДолга,
		|	Долг.СрокПогашения КАК СрокПогашения
		|ИЗ
		|	Документ.Долг КАК Долг
		|ГДЕ
		|	Долг.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Движения = Новый Структура;
	Движения.Вставить("Долги", РезультатЗапроса[0].Выгрузить());
	Движения.Вставить("ХарактеристикиДолгов", РезультатЗапроса[1].Выгрузить());
	
	Возврат Движения;
КонецФункции

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.
//                               ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	Документы.ПогашениеДолга.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
КонецПроцедуры

// Заполняет список текущих дел пользователя.
//
// Параметры:
//  ТаблицаЗначений - определяет параметры дела:
//    * Идентификатор  - Строка - внутренний идентификатор дела, используемый подсистемой.
//    * ЕстьДела       - Булево - если Истина, дело выводится в списке текущих дел пользователя.
//    * Важное         - Булево - если Истина, дело будет выделено красным цветом.
//    * ВыводитьВОповещениях - Булево - если Истина, уведомление о деле будет дублироваться всплывающим
//                             оповещением и отображением в центре оповещений.
//    * СкрыватьВНастройках - Булево - если Истина, то дело будет скрыто в форме настроек текущих дел.
//                            Можно применять для дел, которые не предполагают многократного
//                            использования, т.е. после выполнения они для данной информационной базы
//                            больше отображаться не будут.
//    * Представление  - Строка - представление дела, выводимое пользователю.
//    * Количество     - Число  - количественный показатель дела, выводится в строке заголовка дела.
//    * Форма          - Строка - полный путь к форме, которую необходимо открыть при нажатии на гиперссылку
//                                дела на панели "Текущие дела".
//    * ПараметрыФормы - Структура - параметры, с которыми нужно открывать форму показателя.
//    * Владелец       - Строка
//                     - ОбъектМетаданных - строковый идентификатор дела, которое будет владельцем для текущего
//                       или объект метаданных подсистема.
//    * Подсказка      - Строка - текст подсказки.
//    * ОбъектВладелецДел - Строка - полное имя объекта метаданных, в котором расположен обработчик заполнения дел.
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	Если Не ПравоДоступа("Просмотр", Метаданные.Документы.Долг) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХарактеристикиДолгов.Долг КАК Долг,
		|	ХарактеристикиДолгов.СрокПогашения КАК СрокПогашения
		|ПОМЕСТИТЬ ВТ_ВсеПросроченныеДолги
		|ИЗ
		|	РегистрСведений.ХарактеристикиДолгов КАК ХарактеристикиДолгов
		|ГДЕ
		|	ХарактеристикиДолгов.СрокПогашения <> ДАТАВРЕМЯ(1, 1, 1)
		|	И ХарактеристикиДолгов.СрокПогашения < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДолгиОстатки.Долг КАК Долг
		|ПОМЕСТИТЬ ВТ_ОстаткиДолгов
		|ИЗ
		|	РегистрНакопления.Долги.Остатки(&ТекущаяДата, ) КАК ДолгиОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ВсеПросроченныеДолги.Долг) КАК Количество
		|ИЗ
		|	ВТ_ВсеПросроченныеДолги КАК ВТ_ВсеПросроченныеДолги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОстаткиДолгов КАК ВТ_ОстаткиДолгов
		|		ПО ВТ_ВсеПросроченныеДолги.Долг = ВТ_ОстаткиДолгов.Долг";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	КоличествоПросроченныхДолгов = РезультатЗапроса.Выгрузить()[0].Количество;
	
	//ГруппаДел = ТекущиеДела.Добавить();
	//ГруппаДел.Идентификатор = "Долги";
	//ГруппаДел.Представление = НСтр("ru='Долги'");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор = "ПросроченныеДолги";
	Дело.Владелец = Метаданные.Подсистемы.Долги;
	Дело.ЕстьДела = (КоличествоПросроченныхДолгов > 0);
	Дело.Представление = НСтр("ru='Есть просроченные долги'");
	Дело.Количество = КоличествоПросроченныхДолгов;
	Дело.Форма = "Документ.Долг.Форма.ФормаСписка";
КонецПроцедуры

#КонецОбласти

#КонецЕсли
