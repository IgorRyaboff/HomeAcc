
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ЭтоВыпискаРайффайзенбанка") Тогда
		ЗаполнитьПоВыпискеРайффайзенбанка(ДанныеЗаполнения);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	ЗначенияКратностиЕдиницИзмерения = ЗначенияКратностиЕдиницИзмерения();
	Для Каждого СтрРасходы Из Расходы Цикл
		Кратность = ЗначенияКратностиЕдиницИзмерения[СтрРасходы.Номенклатура];
		Если Кратность = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Окр(СтрРасходы.КоличествоВУпаковке * СтрРасходы.КоличествоУпаковок, 3) % Кратность <> 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(НСтр("ru='Произведение количества в упаковке на количество упаковок в строке %1 должно быть кратно %2'"), СтрРасходы.НомерСтроки, Кратность);
			Сообщение.Поле = СтрШаблон("Расходы[%1].КоличествоУпаковок", Формат(Расходы.Индекс(СтрРасходы), "ЧН=0; ЧГ="));
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Для Каждого СТЧ Из Расходы Цикл
		СТЧ.Сумма = СТЧ.КоличествоУпаковок * СТЧ.Цена;
	КонецЦикла;
	
	СуммаДокумента = Расходы.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ПроведениеДокументов.СоздатьИЗаписатьДвиженияПриПроведении(ЭтотОбъект, "ОстаткиНаСчетах");
	
	ДоходыРасходы.ПроверитьОстатокНаСчетеПриПроведении(Счет, Новый Граница(Дата, ВидГраницы.Включая), Отказ);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ОбщегоНазначенияПятьДенег.УстановитьПризнакЗаписыватьДляВсехНаборовДвижений(ЭтотОбъект);
	Движения.Записать();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗначенияКратностиЕдиницИзмерения()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	ЕдиницыИзмерения.Кратность КАК Кратность
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|		ПО Номенклатура.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
		|			И (НЕ ЕдиницыИзмерения.Безразмерная)
		|ГДЕ
		|	Номенклатура.Ссылка В(&МассивНоменклатуры)";
	
	МассивНоменклатуры = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Расходы.ВыгрузитьКолонку("Номенклатура"));
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(МассивНоменклатуры, Справочники.Номенклатура.ПустаяСсылка());
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Результат = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Результат[Выборка.Номенклатура] = Выборка.Кратность;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Процедура ЗаполнитьПоВыпискеРайффайзенбанка(ДанныеЗаполнения)
	Дата = ДанныеЗаполнения.Дата;
	Счет = ДанныеЗаполнения.Счет;
КонецПроцедуры

#КонецОбласти

#Иначе
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
